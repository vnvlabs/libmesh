# Makefile.in generated by automake 1.16.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# This is part of the netCDF package. Copyright 2005-2018 University
# Corporation for Atmospheric Research/Unidata See COPYRIGHT file for
# conditions of use.
#
# This directory holds tests for netCDF-4. It is skipped if netCDF-4
# is not enabled.
#
# Ed Hartnett, Ward Fisher

# This is part of the netCDF package.
# Copyright 2005 University Corporation for Atmospheric Research/Unidata
# See COPYRIGHT file for conditions of use.
# 
# Assemble the CPPFLAGS and LDFLAGS that point to all the needed
# libraries for netCDF-4.
#

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@USE_DAP_TRUE@am__append_1 = -I${top_srcdir}/oc2

# Temporary I hope
@ISCYGWIN_FALSE@am__append_2 = tst_h_strbug tst_h_refs
check_PROGRAMS = $(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) $(am__EXEEXT_8) \
	$(am__EXEEXT_9)
TESTS = $(am__EXEEXT_10) $(am__EXEEXT_4) $(am__append_7) \
	$(am__append_8) $(am__EXEEXT_5) $(am__EXEEXT_11) \
	$(am__append_13) $(am__append_15) $(am__append_16) \
	$(am__append_18) $(am__EXEEXT_12)

# Build test programs plus programs used in test scripts.
@USE_NETCDF4_TRUE@am__append_3 = $(NC4_TESTS) renamegroup tst_empty_vlen_unlim
@USE_NETCDF4_TRUE@am__append_4 = $(NC4_TESTS)

# Add these if large file tests are turned on.
@LARGE_FILE_TESTS_TRUE@am__append_5 = tst_large tst_large2
@LARGE_FILE_TESTS_TRUE@am__append_6 = tst_large tst_large2
@BUILD_UTILITIES_TRUE@@USE_NETCDF4_TRUE@am__append_7 = run_grp_rename.sh tst_misc.sh
@USE_NETCDF4_TRUE@am__append_8 = run_empty_vlen_test.sh

# If the v2 API was built, add its test program.
@BUILD_V2_TRUE@am__append_9 = tst_v2
@BUILD_V2_TRUE@am__append_10 = tst_v2

# If benchmarks were turned on, build and run a bunch more tests.
@BUILD_BENCHMARKS_TRUE@am__append_11 = tst_create_files bm_file tst_chunks3 tst_ar4	\
@BUILD_BENCHMARKS_TRUE@tst_ar4_3d tst_ar4_4d bm_many_objs tst_h_many_atts bm_many_atts	\
@BUILD_BENCHMARKS_TRUE@tst_files2 tst_files3 tst_mem tst_knmi bm_netcdf4_recs

@BUILD_BENCHMARKS_TRUE@am__append_12 = tst_ar4_3d tst_create_files run_bm_test1.sh run_bm_elena.sh	\
@BUILD_BENCHMARKS_TRUE@run_bm_test2.sh run_tst_chunks.sh tst_files2 tst_files3 tst_mem		\
@BUILD_BENCHMARKS_TRUE@run_knmi_bm.sh


# This will run a parallel I/O benchmark for parallel builds.
@BUILD_BENCHMARKS_TRUE@@TEST_PARALLEL4_TRUE@am__append_13 = run_par_bm_test.sh

# Szip Tests (requires ncdump)
@BUILD_UTILITIES_TRUE@@USE_SZIP_TRUE@am__append_14 = test_szip h5testszip
@BUILD_UTILITIES_TRUE@@USE_SZIP_TRUE@am__append_15 = tst_szip.sh
@BUILD_UTILITIES_TRUE@@ENABLE_FILTER_TESTING_TRUE@extra_PROGRAMS = test_filter$(EXEEXT) \
@BUILD_UTILITIES_TRUE@@ENABLE_FILTER_TESTING_TRUE@	test_filter_misc$(EXEEXT)
@BUILD_UTILITIES_TRUE@@ENABLE_FILTER_TESTING_TRUE@am__append_16 = tst_filter.sh

# This are extra tests that will only be run if netcdf-4 is configured
# with --enable-parallel-tests.
@TEST_PARALLEL4_TRUE@am__append_17 = tst_mpi_parallel tst_parallel tst_parallel3		\
@TEST_PARALLEL4_TRUE@tst_parallel4 tst_parallel5 tst_nc4perf tst_mode tst_simplerw_coll_r	\
@TEST_PARALLEL4_TRUE@tst_mode

@TEST_PARALLEL4_TRUE@am__append_18 = run_par_test.sh
@ENABLE_METADATA_PERF_TRUE@am__append_19 = bigmeta openbigmeta tst_attsperf
@ENABLE_METADATA_PERF_TRUE@am__append_20 = tst_attsperf perftest.sh
subdir = nc_test4
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = findplugin.sh run_par_test.sh run_par_bm_test.sh
CONFIG_CLEAN_VPATH_FILES = ref_hdf5_compat1.nc ref_hdf5_compat2.nc \
	ref_hdf5_compat3.nc
@ISCYGWIN_FALSE@am__EXEEXT_1 = tst_h_strbug$(EXEEXT) \
@ISCYGWIN_FALSE@	tst_h_refs$(EXEEXT)
am__EXEEXT_2 = tst_dims$(EXEEXT) tst_dims2$(EXEEXT) tst_dims3$(EXEEXT) \
	tst_files$(EXEEXT) tst_files4$(EXEEXT) tst_vars$(EXEEXT) \
	tst_varms$(EXEEXT) tst_unlim_vars$(EXEEXT) \
	tst_converts$(EXEEXT) tst_converts2$(EXEEXT) tst_grps$(EXEEXT) \
	tst_grps2$(EXEEXT) tst_compounds$(EXEEXT) \
	tst_compounds2$(EXEEXT) tst_compounds3$(EXEEXT) \
	tst_opaques$(EXEEXT) tst_strings$(EXEEXT) \
	tst_strings2$(EXEEXT) tst_interops$(EXEEXT) \
	tst_interops4$(EXEEXT) tst_interops5$(EXEEXT) \
	tst_interops6$(EXEEXT) tst_enums$(EXEEXT) tst_coords$(EXEEXT) \
	tst_coords2$(EXEEXT) tst_coords3$(EXEEXT) tst_vars3$(EXEEXT) \
	tst_vars4$(EXEEXT) tst_chunks$(EXEEXT) tst_chunks2$(EXEEXT) \
	tst_utf8$(EXEEXT) tst_fills$(EXEEXT) tst_fills2$(EXEEXT) \
	tst_fillbug$(EXEEXT) tst_xplatform$(EXEEXT) \
	tst_xplatform2$(EXEEXT) tst_endian_fill$(EXEEXT) \
	tst_atts$(EXEEXT) t_type$(EXEEXT) cdm_sea_soundings$(EXEEXT) \
	tst_camrun$(EXEEXT) tst_vl$(EXEEXT) tst_atts1$(EXEEXT) \
	tst_atts2$(EXEEXT) tst_vars2$(EXEEXT) tst_files5$(EXEEXT) \
	tst_files6$(EXEEXT) tst_sync$(EXEEXT) tst_h_scalar$(EXEEXT) \
	tst_rename$(EXEEXT) tst_rename2$(EXEEXT) \
	tst_h5_endians$(EXEEXT) tst_atts_string_rewrite$(EXEEXT) \
	tst_hdf5_file_compat$(EXEEXT) tst_fill_attr_vanish$(EXEEXT) \
	tst_rehash$(EXEEXT) tst_filterparser$(EXEEXT) \
	tst_bug324$(EXEEXT) tst_types$(EXEEXT) tst_atts3$(EXEEXT) \
	tst_put_vars$(EXEEXT) tst_elatefill$(EXEEXT) tst_udf$(EXEEXT) \
	$(am__EXEEXT_1)
@USE_NETCDF4_TRUE@am__EXEEXT_3 = $(am__EXEEXT_2) renamegroup$(EXEEXT) \
@USE_NETCDF4_TRUE@	tst_empty_vlen_unlim$(EXEEXT)
@LARGE_FILE_TESTS_TRUE@am__EXEEXT_4 = tst_large$(EXEEXT) \
@LARGE_FILE_TESTS_TRUE@	tst_large2$(EXEEXT)
@BUILD_V2_TRUE@am__EXEEXT_5 = tst_v2$(EXEEXT)
@BUILD_BENCHMARKS_TRUE@am__EXEEXT_6 = tst_create_files$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	bm_file$(EXEEXT) tst_chunks3$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_ar4$(EXEEXT) tst_ar4_3d$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_ar4_4d$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	bm_many_objs$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_h_many_atts$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	bm_many_atts$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_files2$(EXEEXT) tst_files3$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_mem$(EXEEXT) tst_knmi$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	bm_netcdf4_recs$(EXEEXT)
@BUILD_UTILITIES_TRUE@@USE_SZIP_TRUE@am__EXEEXT_7 =  \
@BUILD_UTILITIES_TRUE@@USE_SZIP_TRUE@	test_szip$(EXEEXT) \
@BUILD_UTILITIES_TRUE@@USE_SZIP_TRUE@	h5testszip$(EXEEXT)
@TEST_PARALLEL4_TRUE@am__EXEEXT_8 = tst_mpi_parallel$(EXEEXT) \
@TEST_PARALLEL4_TRUE@	tst_parallel$(EXEEXT) \
@TEST_PARALLEL4_TRUE@	tst_parallel3$(EXEEXT) \
@TEST_PARALLEL4_TRUE@	tst_parallel4$(EXEEXT) \
@TEST_PARALLEL4_TRUE@	tst_parallel5$(EXEEXT) \
@TEST_PARALLEL4_TRUE@	tst_nc4perf$(EXEEXT) tst_mode$(EXEEXT) \
@TEST_PARALLEL4_TRUE@	tst_simplerw_coll_r$(EXEEXT) \
@TEST_PARALLEL4_TRUE@	tst_mode$(EXEEXT)
@ENABLE_METADATA_PERF_TRUE@am__EXEEXT_9 = bigmeta$(EXEEXT) \
@ENABLE_METADATA_PERF_TRUE@	openbigmeta$(EXEEXT) \
@ENABLE_METADATA_PERF_TRUE@	tst_attsperf$(EXEEXT)
am__installdirs = "$(DESTDIR)$(extradir)"
PROGRAMS = $(extra_PROGRAMS)
bigmeta_SOURCES = bigmeta.c
bigmeta_OBJECTS = bigmeta.$(OBJEXT)
bigmeta_LDADD = $(LDADD)
bigmeta_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am__bm_file_SOURCES_DIST = bm_file.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_bm_file_OBJECTS = bm_file.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
bm_file_OBJECTS = $(am_bm_file_OBJECTS)
bm_file_LDADD = $(LDADD)
bm_file_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__bm_many_atts_SOURCES_DIST = bm_many_atts.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_bm_many_atts_OBJECTS =  \
@BUILD_BENCHMARKS_TRUE@	bm_many_atts.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
bm_many_atts_OBJECTS = $(am_bm_many_atts_OBJECTS)
bm_many_atts_LDADD = $(LDADD)
bm_many_atts_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__bm_many_objs_SOURCES_DIST = bm_many_objs.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_bm_many_objs_OBJECTS =  \
@BUILD_BENCHMARKS_TRUE@	bm_many_objs.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
bm_many_objs_OBJECTS = $(am_bm_many_objs_OBJECTS)
bm_many_objs_LDADD = $(LDADD)
bm_many_objs_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__bm_netcdf4_recs_SOURCES_DIST = bm_netcdf4_recs.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_bm_netcdf4_recs_OBJECTS =  \
@BUILD_BENCHMARKS_TRUE@	bm_netcdf4_recs.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
bm_netcdf4_recs_OBJECTS = $(am_bm_netcdf4_recs_OBJECTS)
bm_netcdf4_recs_LDADD = $(LDADD)
bm_netcdf4_recs_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
cdm_sea_soundings_SOURCES = cdm_sea_soundings.c
cdm_sea_soundings_OBJECTS = cdm_sea_soundings.$(OBJEXT)
cdm_sea_soundings_LDADD = $(LDADD)
cdm_sea_soundings_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
h5testszip_SOURCES = h5testszip.c
h5testszip_OBJECTS = h5testszip.$(OBJEXT)
h5testszip_LDADD = $(LDADD)
h5testszip_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
openbigmeta_SOURCES = openbigmeta.c
openbigmeta_OBJECTS = openbigmeta.$(OBJEXT)
openbigmeta_LDADD = $(LDADD)
openbigmeta_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
renamegroup_SOURCES = renamegroup.c
renamegroup_OBJECTS = renamegroup.$(OBJEXT)
renamegroup_LDADD = $(LDADD)
renamegroup_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
t_type_SOURCES = t_type.c
t_type_OBJECTS = t_type.$(OBJEXT)
t_type_LDADD = $(LDADD)
t_type_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
test_filter_SOURCES = test_filter.c
test_filter_OBJECTS = test_filter.$(OBJEXT)
test_filter_LDADD = $(LDADD)
test_filter_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
test_filter_misc_SOURCES = test_filter_misc.c
test_filter_misc_OBJECTS = test_filter_misc.$(OBJEXT)
test_filter_misc_LDADD = $(LDADD)
test_filter_misc_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
test_szip_SOURCES = test_szip.c
test_szip_OBJECTS = test_szip.$(OBJEXT)
test_szip_LDADD = $(LDADD)
test_szip_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__tst_ar4_SOURCES_DIST = tst_ar4.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_tst_ar4_OBJECTS = tst_ar4.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
tst_ar4_OBJECTS = $(am_tst_ar4_OBJECTS)
tst_ar4_LDADD = $(LDADD)
tst_ar4_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__tst_ar4_3d_SOURCES_DIST = tst_ar4_3d.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_tst_ar4_3d_OBJECTS = tst_ar4_3d.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
tst_ar4_3d_OBJECTS = $(am_tst_ar4_3d_OBJECTS)
tst_ar4_3d_LDADD = $(LDADD)
tst_ar4_3d_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__tst_ar4_4d_SOURCES_DIST = tst_ar4_4d.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_tst_ar4_4d_OBJECTS = tst_ar4_4d.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
tst_ar4_4d_OBJECTS = $(am_tst_ar4_4d_OBJECTS)
tst_ar4_4d_LDADD = $(LDADD)
tst_ar4_4d_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_atts_SOURCES = tst_atts.c
tst_atts_OBJECTS = tst_atts.$(OBJEXT)
tst_atts_LDADD = $(LDADD)
tst_atts_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_atts1_SOURCES = tst_atts1.c
tst_atts1_OBJECTS = tst_atts1.$(OBJEXT)
tst_atts1_LDADD = $(LDADD)
tst_atts1_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_atts2_SOURCES = tst_atts2.c
tst_atts2_OBJECTS = tst_atts2.$(OBJEXT)
tst_atts2_LDADD = $(LDADD)
tst_atts2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_atts3_SOURCES = tst_atts3.c
tst_atts3_OBJECTS = tst_atts3.$(OBJEXT)
tst_atts3_LDADD = $(LDADD)
tst_atts3_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_atts_string_rewrite_SOURCES = tst_atts_string_rewrite.c
tst_atts_string_rewrite_OBJECTS = tst_atts_string_rewrite.$(OBJEXT)
tst_atts_string_rewrite_LDADD = $(LDADD)
tst_atts_string_rewrite_DEPENDENCIES =  \
	${top_builddir}/liblib/libnetcdf.la
tst_attsperf_SOURCES = tst_attsperf.c
tst_attsperf_OBJECTS = tst_attsperf.$(OBJEXT)
tst_attsperf_LDADD = $(LDADD)
tst_attsperf_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_bug324_SOURCES = tst_bug324.c
tst_bug324_OBJECTS = tst_bug324.$(OBJEXT)
tst_bug324_LDADD = $(LDADD)
tst_bug324_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_camrun_SOURCES = tst_camrun.c
tst_camrun_OBJECTS = tst_camrun.$(OBJEXT)
tst_camrun_LDADD = $(LDADD)
tst_camrun_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_chunks_SOURCES = tst_chunks.c
tst_chunks_OBJECTS = tst_chunks.$(OBJEXT)
tst_chunks_LDADD = $(LDADD)
tst_chunks_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_chunks2_SOURCES = tst_chunks2.c
tst_chunks2_OBJECTS = tst_chunks2.$(OBJEXT)
tst_chunks2_LDADD = $(LDADD)
tst_chunks2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_chunks3_SOURCES = tst_chunks3.c
tst_chunks3_OBJECTS = tst_chunks3.$(OBJEXT)
tst_chunks3_LDADD = $(LDADD)
tst_chunks3_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_compounds_SOURCES = tst_compounds.c
tst_compounds_OBJECTS = tst_compounds.$(OBJEXT)
tst_compounds_LDADD = $(LDADD)
tst_compounds_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_compounds2_SOURCES = tst_compounds2.c
tst_compounds2_OBJECTS = tst_compounds2.$(OBJEXT)
tst_compounds2_LDADD = $(LDADD)
tst_compounds2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_compounds3_SOURCES = tst_compounds3.c
tst_compounds3_OBJECTS = tst_compounds3.$(OBJEXT)
tst_compounds3_LDADD = $(LDADD)
tst_compounds3_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_converts_SOURCES = tst_converts.c
tst_converts_OBJECTS = tst_converts.$(OBJEXT)
tst_converts_LDADD = $(LDADD)
tst_converts_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_converts2_SOURCES = tst_converts2.c
tst_converts2_OBJECTS = tst_converts2.$(OBJEXT)
tst_converts2_LDADD = $(LDADD)
tst_converts2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_coords_SOURCES = tst_coords.c
tst_coords_OBJECTS = tst_coords.$(OBJEXT)
tst_coords_LDADD = $(LDADD)
tst_coords_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_coords2_SOURCES = tst_coords2.c
tst_coords2_OBJECTS = tst_coords2.$(OBJEXT)
tst_coords2_LDADD = $(LDADD)
tst_coords2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_coords3_SOURCES = tst_coords3.c
tst_coords3_OBJECTS = tst_coords3.$(OBJEXT)
tst_coords3_LDADD = $(LDADD)
tst_coords3_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_create_files_SOURCES = tst_create_files.c
tst_create_files_OBJECTS = tst_create_files.$(OBJEXT)
tst_create_files_LDADD = $(LDADD)
tst_create_files_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_dims_SOURCES = tst_dims.c
tst_dims_OBJECTS = tst_dims.$(OBJEXT)
tst_dims_LDADD = $(LDADD)
tst_dims_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_dims2_SOURCES = tst_dims2.c
tst_dims2_OBJECTS = tst_dims2.$(OBJEXT)
tst_dims2_LDADD = $(LDADD)
tst_dims2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_dims3_SOURCES = tst_dims3.c
tst_dims3_OBJECTS = tst_dims3.$(OBJEXT)
tst_dims3_LDADD = $(LDADD)
tst_dims3_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_elatefill_SOURCES = tst_elatefill.c
tst_elatefill_OBJECTS = tst_elatefill.$(OBJEXT)
tst_elatefill_LDADD = $(LDADD)
tst_elatefill_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_empty_vlen_unlim_SOURCES = tst_empty_vlen_unlim.c
tst_empty_vlen_unlim_OBJECTS = tst_empty_vlen_unlim.$(OBJEXT)
tst_empty_vlen_unlim_LDADD = $(LDADD)
tst_empty_vlen_unlim_DEPENDENCIES =  \
	${top_builddir}/liblib/libnetcdf.la
tst_endian_fill_SOURCES = tst_endian_fill.c
tst_endian_fill_OBJECTS = tst_endian_fill.$(OBJEXT)
tst_endian_fill_LDADD = $(LDADD)
tst_endian_fill_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_enums_SOURCES = tst_enums.c
tst_enums_OBJECTS = tst_enums.$(OBJEXT)
tst_enums_LDADD = $(LDADD)
tst_enums_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_files_SOURCES = tst_files.c
tst_files_OBJECTS = tst_files.$(OBJEXT)
tst_files_LDADD = $(LDADD)
tst_files_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__tst_files2_SOURCES_DIST = tst_files2.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_tst_files2_OBJECTS = tst_files2.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
tst_files2_OBJECTS = $(am_tst_files2_OBJECTS)
tst_files2_LDADD = $(LDADD)
tst_files2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_files3_SOURCES = tst_files3.c
tst_files3_OBJECTS = tst_files3.$(OBJEXT)
tst_files3_LDADD = $(LDADD)
tst_files3_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_files4_SOURCES = tst_files4.c
tst_files4_OBJECTS = tst_files4.$(OBJEXT)
tst_files4_LDADD = $(LDADD)
tst_files4_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_files5_SOURCES = tst_files5.c
tst_files5_OBJECTS = tst_files5.$(OBJEXT)
tst_files5_LDADD = $(LDADD)
tst_files5_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_files6_SOURCES = tst_files6.c
tst_files6_OBJECTS = tst_files6.$(OBJEXT)
tst_files6_LDADD = $(LDADD)
tst_files6_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_fill_attr_vanish_SOURCES = tst_fill_attr_vanish.c
tst_fill_attr_vanish_OBJECTS = tst_fill_attr_vanish.$(OBJEXT)
tst_fill_attr_vanish_LDADD = $(LDADD)
tst_fill_attr_vanish_DEPENDENCIES =  \
	${top_builddir}/liblib/libnetcdf.la
tst_fillbug_SOURCES = tst_fillbug.c
tst_fillbug_OBJECTS = tst_fillbug.$(OBJEXT)
tst_fillbug_LDADD = $(LDADD)
tst_fillbug_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_fills_SOURCES = tst_fills.c
tst_fills_OBJECTS = tst_fills.$(OBJEXT)
tst_fills_LDADD = $(LDADD)
tst_fills_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_fills2_SOURCES = tst_fills2.c
tst_fills2_OBJECTS = tst_fills2.$(OBJEXT)
tst_fills2_LDADD = $(LDADD)
tst_fills2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_filterparser_SOURCES = tst_filterparser.c
tst_filterparser_OBJECTS = tst_filterparser.$(OBJEXT)
tst_filterparser_LDADD = $(LDADD)
tst_filterparser_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_grps_SOURCES = tst_grps.c
tst_grps_OBJECTS = tst_grps.$(OBJEXT)
tst_grps_LDADD = $(LDADD)
tst_grps_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_grps2_SOURCES = tst_grps2.c
tst_grps2_OBJECTS = tst_grps2.$(OBJEXT)
tst_grps2_LDADD = $(LDADD)
tst_grps2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_h5_endians_SOURCES = tst_h5_endians.c
tst_h5_endians_OBJECTS = tst_h5_endians.$(OBJEXT)
tst_h5_endians_LDADD = $(LDADD)
tst_h5_endians_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__tst_h_many_atts_SOURCES_DIST = tst_h_many_atts.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_tst_h_many_atts_OBJECTS =  \
@BUILD_BENCHMARKS_TRUE@	tst_h_many_atts.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
tst_h_many_atts_OBJECTS = $(am_tst_h_many_atts_OBJECTS)
tst_h_many_atts_LDADD = $(LDADD)
tst_h_many_atts_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_h_refs_SOURCES = tst_h_refs.c
tst_h_refs_OBJECTS = tst_h_refs.$(OBJEXT)
tst_h_refs_LDADD = $(LDADD)
tst_h_refs_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_h_scalar_SOURCES = tst_h_scalar.c
tst_h_scalar_OBJECTS = tst_h_scalar.$(OBJEXT)
tst_h_scalar_LDADD = $(LDADD)
tst_h_scalar_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_h_strbug_SOURCES = tst_h_strbug.c
tst_h_strbug_OBJECTS = tst_h_strbug.$(OBJEXT)
tst_h_strbug_LDADD = $(LDADD)
tst_h_strbug_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_hdf5_file_compat_SOURCES = tst_hdf5_file_compat.c
tst_hdf5_file_compat_OBJECTS = tst_hdf5_file_compat.$(OBJEXT)
tst_hdf5_file_compat_LDADD = $(LDADD)
tst_hdf5_file_compat_DEPENDENCIES =  \
	${top_builddir}/liblib/libnetcdf.la
tst_interops_SOURCES = tst_interops.c
tst_interops_OBJECTS = tst_interops.$(OBJEXT)
tst_interops_LDADD = $(LDADD)
tst_interops_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_interops4_SOURCES = tst_interops4.c
tst_interops4_OBJECTS = tst_interops4.$(OBJEXT)
tst_interops4_LDADD = $(LDADD)
tst_interops4_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_interops5_SOURCES = tst_interops5.c
tst_interops5_OBJECTS = tst_interops5.$(OBJEXT)
tst_interops5_LDADD = $(LDADD)
tst_interops5_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_interops6_SOURCES = tst_interops6.c
tst_interops6_OBJECTS = tst_interops6.$(OBJEXT)
tst_interops6_LDADD = $(LDADD)
tst_interops6_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
am__tst_knmi_SOURCES_DIST = tst_knmi.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@am_tst_knmi_OBJECTS = tst_knmi.$(OBJEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_utils.$(OBJEXT)
tst_knmi_OBJECTS = $(am_tst_knmi_OBJECTS)
tst_knmi_LDADD = $(LDADD)
tst_knmi_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_large_SOURCES = tst_large.c
tst_large_OBJECTS = tst_large.$(OBJEXT)
tst_large_LDADD = $(LDADD)
tst_large_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_large2_SOURCES = tst_large2.c
tst_large2_OBJECTS = tst_large2.$(OBJEXT)
tst_large2_LDADD = $(LDADD)
tst_large2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_mem_SOURCES = tst_mem.c
tst_mem_OBJECTS = tst_mem.$(OBJEXT)
tst_mem_LDADD = $(LDADD)
tst_mem_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_mode_SOURCES = tst_mode.c
tst_mode_OBJECTS = tst_mode.$(OBJEXT)
tst_mode_LDADD = $(LDADD)
tst_mode_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_mpi_parallel_SOURCES = tst_mpi_parallel.c
tst_mpi_parallel_OBJECTS = tst_mpi_parallel.$(OBJEXT)
tst_mpi_parallel_LDADD = $(LDADD)
tst_mpi_parallel_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_nc4perf_SOURCES = tst_nc4perf.c
tst_nc4perf_OBJECTS = tst_nc4perf.$(OBJEXT)
tst_nc4perf_LDADD = $(LDADD)
tst_nc4perf_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_opaques_SOURCES = tst_opaques.c
tst_opaques_OBJECTS = tst_opaques.$(OBJEXT)
tst_opaques_LDADD = $(LDADD)
tst_opaques_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_parallel_SOURCES = tst_parallel.c
tst_parallel_OBJECTS = tst_parallel.$(OBJEXT)
tst_parallel_LDADD = $(LDADD)
tst_parallel_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_parallel3_SOURCES = tst_parallel3.c
tst_parallel3_OBJECTS = tst_parallel3.$(OBJEXT)
tst_parallel3_LDADD = $(LDADD)
tst_parallel3_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_parallel4_SOURCES = tst_parallel4.c
tst_parallel4_OBJECTS = tst_parallel4.$(OBJEXT)
tst_parallel4_LDADD = $(LDADD)
tst_parallel4_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_parallel5_SOURCES = tst_parallel5.c
tst_parallel5_OBJECTS = tst_parallel5.$(OBJEXT)
tst_parallel5_LDADD = $(LDADD)
tst_parallel5_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_put_vars_SOURCES = tst_put_vars.c
tst_put_vars_OBJECTS = tst_put_vars.$(OBJEXT)
tst_put_vars_LDADD = $(LDADD)
tst_put_vars_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_rehash_SOURCES = tst_rehash.c
tst_rehash_OBJECTS = tst_rehash.$(OBJEXT)
tst_rehash_LDADD = $(LDADD)
tst_rehash_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_rename_SOURCES = tst_rename.c
tst_rename_OBJECTS = tst_rename.$(OBJEXT)
tst_rename_LDADD = $(LDADD)
tst_rename_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_rename2_SOURCES = tst_rename2.c
tst_rename2_OBJECTS = tst_rename2.$(OBJEXT)
tst_rename2_LDADD = $(LDADD)
tst_rename2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_simplerw_coll_r_SOURCES = tst_simplerw_coll_r.c
tst_simplerw_coll_r_OBJECTS = tst_simplerw_coll_r.$(OBJEXT)
tst_simplerw_coll_r_LDADD = $(LDADD)
tst_simplerw_coll_r_DEPENDENCIES =  \
	${top_builddir}/liblib/libnetcdf.la
tst_strings_SOURCES = tst_strings.c
tst_strings_OBJECTS = tst_strings.$(OBJEXT)
tst_strings_LDADD = $(LDADD)
tst_strings_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_strings2_SOURCES = tst_strings2.c
tst_strings2_OBJECTS = tst_strings2.$(OBJEXT)
tst_strings2_LDADD = $(LDADD)
tst_strings2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_sync_SOURCES = tst_sync.c
tst_sync_OBJECTS = tst_sync.$(OBJEXT)
tst_sync_LDADD = $(LDADD)
tst_sync_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_types_SOURCES = tst_types.c
tst_types_OBJECTS = tst_types.$(OBJEXT)
tst_types_LDADD = $(LDADD)
tst_types_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_udf_SOURCES = tst_udf.c
tst_udf_OBJECTS = tst_udf.$(OBJEXT)
tst_udf_LDADD = $(LDADD)
tst_udf_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_unlim_vars_SOURCES = tst_unlim_vars.c
tst_unlim_vars_OBJECTS = tst_unlim_vars.$(OBJEXT)
tst_unlim_vars_LDADD = $(LDADD)
tst_unlim_vars_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_utf8_SOURCES = tst_utf8.c
tst_utf8_OBJECTS = tst_utf8.$(OBJEXT)
tst_utf8_LDADD = $(LDADD)
tst_utf8_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_v2_SOURCES = tst_v2.c
tst_v2_OBJECTS = tst_v2.$(OBJEXT)
tst_v2_LDADD = $(LDADD)
tst_v2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_varms_SOURCES = tst_varms.c
tst_varms_OBJECTS = tst_varms.$(OBJEXT)
tst_varms_LDADD = $(LDADD)
tst_varms_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_vars_SOURCES = tst_vars.c
tst_vars_OBJECTS = tst_vars.$(OBJEXT)
tst_vars_LDADD = $(LDADD)
tst_vars_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_vars2_SOURCES = tst_vars2.c
tst_vars2_OBJECTS = tst_vars2.$(OBJEXT)
tst_vars2_LDADD = $(LDADD)
tst_vars2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_vars3_SOURCES = tst_vars3.c
tst_vars3_OBJECTS = tst_vars3.$(OBJEXT)
tst_vars3_LDADD = $(LDADD)
tst_vars3_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_vars4_SOURCES = tst_vars4.c
tst_vars4_OBJECTS = tst_vars4.$(OBJEXT)
tst_vars4_LDADD = $(LDADD)
tst_vars4_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_vl_SOURCES = tst_vl.c
tst_vl_OBJECTS = tst_vl.$(OBJEXT)
tst_vl_LDADD = $(LDADD)
tst_vl_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_xplatform_SOURCES = tst_xplatform.c
tst_xplatform_OBJECTS = tst_xplatform.$(OBJEXT)
tst_xplatform_LDADD = $(LDADD)
tst_xplatform_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
tst_xplatform2_SOURCES = tst_xplatform2.c
tst_xplatform2_OBJECTS = tst_xplatform2.$(OBJEXT)
tst_xplatform2_LDADD = $(LDADD)
tst_xplatform2_DEPENDENCIES = ${top_builddir}/liblib/libnetcdf.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__maybe_remake_depfiles =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = bigmeta.c $(bm_file_SOURCES) $(bm_many_atts_SOURCES) \
	$(bm_many_objs_SOURCES) $(bm_netcdf4_recs_SOURCES) \
	cdm_sea_soundings.c h5testszip.c openbigmeta.c renamegroup.c \
	t_type.c test_filter.c test_filter_misc.c test_szip.c \
	$(tst_ar4_SOURCES) $(tst_ar4_3d_SOURCES) $(tst_ar4_4d_SOURCES) \
	tst_atts.c tst_atts1.c tst_atts2.c tst_atts3.c \
	tst_atts_string_rewrite.c tst_attsperf.c tst_bug324.c \
	tst_camrun.c tst_chunks.c tst_chunks2.c tst_chunks3.c \
	tst_compounds.c tst_compounds2.c tst_compounds3.c \
	tst_converts.c tst_converts2.c tst_coords.c tst_coords2.c \
	tst_coords3.c tst_create_files.c tst_dims.c tst_dims2.c \
	tst_dims3.c tst_elatefill.c tst_empty_vlen_unlim.c \
	tst_endian_fill.c tst_enums.c tst_files.c \
	$(tst_files2_SOURCES) tst_files3.c tst_files4.c tst_files5.c \
	tst_files6.c tst_fill_attr_vanish.c tst_fillbug.c tst_fills.c \
	tst_fills2.c tst_filterparser.c tst_grps.c tst_grps2.c \
	tst_h5_endians.c $(tst_h_many_atts_SOURCES) tst_h_refs.c \
	tst_h_scalar.c tst_h_strbug.c tst_hdf5_file_compat.c \
	tst_interops.c tst_interops4.c tst_interops5.c tst_interops6.c \
	$(tst_knmi_SOURCES) tst_large.c tst_large2.c tst_mem.c \
	tst_mode.c tst_mpi_parallel.c tst_nc4perf.c tst_opaques.c \
	tst_parallel.c tst_parallel3.c tst_parallel4.c tst_parallel5.c \
	tst_put_vars.c tst_rehash.c tst_rename.c tst_rename2.c \
	tst_simplerw_coll_r.c tst_strings.c tst_strings2.c tst_sync.c \
	tst_types.c tst_udf.c tst_unlim_vars.c tst_utf8.c tst_v2.c \
	tst_varms.c tst_vars.c tst_vars2.c tst_vars3.c tst_vars4.c \
	tst_vl.c tst_xplatform.c tst_xplatform2.c
DIST_SOURCES = bigmeta.c $(am__bm_file_SOURCES_DIST) \
	$(am__bm_many_atts_SOURCES_DIST) \
	$(am__bm_many_objs_SOURCES_DIST) \
	$(am__bm_netcdf4_recs_SOURCES_DIST) cdm_sea_soundings.c \
	h5testszip.c openbigmeta.c renamegroup.c t_type.c \
	test_filter.c test_filter_misc.c test_szip.c \
	$(am__tst_ar4_SOURCES_DIST) $(am__tst_ar4_3d_SOURCES_DIST) \
	$(am__tst_ar4_4d_SOURCES_DIST) tst_atts.c tst_atts1.c \
	tst_atts2.c tst_atts3.c tst_atts_string_rewrite.c \
	tst_attsperf.c tst_bug324.c tst_camrun.c tst_chunks.c \
	tst_chunks2.c tst_chunks3.c tst_compounds.c tst_compounds2.c \
	tst_compounds3.c tst_converts.c tst_converts2.c tst_coords.c \
	tst_coords2.c tst_coords3.c tst_create_files.c tst_dims.c \
	tst_dims2.c tst_dims3.c tst_elatefill.c tst_empty_vlen_unlim.c \
	tst_endian_fill.c tst_enums.c tst_files.c \
	$(am__tst_files2_SOURCES_DIST) tst_files3.c tst_files4.c \
	tst_files5.c tst_files6.c tst_fill_attr_vanish.c tst_fillbug.c \
	tst_fills.c tst_fills2.c tst_filterparser.c tst_grps.c \
	tst_grps2.c tst_h5_endians.c \
	$(am__tst_h_many_atts_SOURCES_DIST) tst_h_refs.c \
	tst_h_scalar.c tst_h_strbug.c tst_hdf5_file_compat.c \
	tst_interops.c tst_interops4.c tst_interops5.c tst_interops6.c \
	$(am__tst_knmi_SOURCES_DIST) tst_large.c tst_large2.c \
	tst_mem.c tst_mode.c tst_mpi_parallel.c tst_nc4perf.c \
	tst_opaques.c tst_parallel.c tst_parallel3.c tst_parallel4.c \
	tst_parallel5.c tst_put_vars.c tst_rehash.c tst_rename.c \
	tst_rename2.c tst_simplerw_coll_r.c tst_strings.c \
	tst_strings2.c tst_sync.c tst_types.c tst_udf.c \
	tst_unlim_vars.c tst_utf8.c tst_v2.c tst_varms.c tst_vars.c \
	tst_vars2.c tst_vars3.c tst_vars4.c tst_vl.c tst_xplatform.c \
	tst_xplatform2.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__extra_recursive_targets = check-valgrind-recursive \
	check-valgrind-memcheck-recursive \
	check-valgrind-helgrind-recursive check-valgrind-drd-recursive \
	check-valgrind-sgcheck-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
@USE_NETCDF4_TRUE@am__EXEEXT_10 = $(am__EXEEXT_2)
@BUILD_BENCHMARKS_TRUE@am__EXEEXT_11 = tst_ar4_3d$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_create_files$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	run_bm_test1.sh run_bm_elena.sh \
@BUILD_BENCHMARKS_TRUE@	run_bm_test2.sh run_tst_chunks.sh \
@BUILD_BENCHMARKS_TRUE@	tst_files2$(EXEEXT) tst_files3$(EXEEXT) \
@BUILD_BENCHMARKS_TRUE@	tst_mem$(EXEEXT) run_knmi_bm.sh
@ENABLE_METADATA_PERF_TRUE@am__EXEEXT_12 = tst_attsperf$(EXEEXT) \
@ENABLE_METADATA_PERF_TRUE@	perftest.sh
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/findplugin.in \
	$(srcdir)/ref_hdf5_compat1.nc $(srcdir)/ref_hdf5_compat2.nc \
	$(srcdir)/ref_hdf5_compat3.nc $(srcdir)/run_par_bm_test.sh.in \
	$(srcdir)/run_par_test.sh.in $(top_srcdir)/lib_flags.am
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AM_CPPFLAGS = -I$(top_srcdir)/include $(am__append_1)
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@

# Link to our assembled library.
AM_LDFLAGS = ${top_builddir}/liblib/libnetcdf.la
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINFILE_NAME = @BINFILE_NAME@
BUILD_INTERNAL_DOCS = @BUILD_INTERNAL_DOCS@
CC = @CC@
CC_VERSION = @CC_VERSION@
CFLAGS = @CFLAGS@
CONFIG_DATE = @CONFIG_DATE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_CSS_FILE = @DOXYGEN_CSS_FILE@
DOXYGEN_HEADER_FILE = @DOXYGEN_HEADER_FILE@
DOXYGEN_SEARCHENGINE = @DOXYGEN_SEARCHENGINE@
DOXYGEN_SERVER_BASED_SEARCH = @DOXYGEN_SERVER_BASED_SEARCH@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLED_DOC_SECTIONS = @ENABLED_DOC_SECTIONS@
ENABLE_VALGRIND_drd = @ENABLE_VALGRIND_drd@
ENABLE_VALGRIND_helgrind = @ENABLE_VALGRIND_helgrind@
ENABLE_VALGRIND_memcheck = @ENABLE_VALGRIND_memcheck@
ENABLE_VALGRIND_sgcheck = @ENABLE_VALGRIND_sgcheck@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAS_CDF5 = @HAS_CDF5@
HAS_DAP = @HAS_DAP@
HAS_DAP2 = @HAS_DAP2@
HAS_DAP4 = @HAS_DAP4@
HAS_DISKLESS = @HAS_DISKLESS@
HAS_ERANGE_FILL = @HAS_ERANGE_FILL@
HAS_HDF4 = @HAS_HDF4@
HAS_HDF5 = @HAS_HDF5@
HAS_JNA = @HAS_JNA@
HAS_LOGGING = @HAS_LOGGING@
HAS_MMAP = @HAS_MMAP@
HAS_NC2 = @HAS_NC2@
HAS_NC4 = @HAS_NC4@
HAS_PARALLEL = @HAS_PARALLEL@
HAS_PARALLEL4 = @HAS_PARALLEL4@
HAS_PNETCDF = @HAS_PNETCDF@
HAS_SZLIB = @HAS_SZLIB@
HAVE_DOT = @HAVE_DOT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISCMAKE = @ISCMAKE@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
M4FLAGS = @M4FLAGS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPIEXEC = @MPIEXEC@
MSVC = @MSVC@
NC_ENABLE_DOXYGEN_PDF_OUTPUT = @NC_ENABLE_DOXYGEN_PDF_OUTPUT@
NC_HAS_CDF5 = @NC_HAS_CDF5@
NC_HAS_DAP2 = @NC_HAS_DAP2@
NC_HAS_DAP4 = @NC_HAS_DAP4@
NC_HAS_DISKLESS = @NC_HAS_DISKLESS@
NC_HAS_ERANGE_FILL = @NC_HAS_ERANGE_FILL@
NC_HAS_HDF4 = @NC_HAS_HDF4@
NC_HAS_HDF5 = @NC_HAS_HDF5@
NC_HAS_JNA = @NC_HAS_JNA@
NC_HAS_MMAP = @NC_HAS_MMAP@
NC_HAS_NC2 = @NC_HAS_NC2@
NC_HAS_NC4 = @NC_HAS_NC4@
NC_HAS_PARALLEL = @NC_HAS_PARALLEL@
NC_HAS_PARALLEL4 = @NC_HAS_PARALLEL4@
NC_HAS_PNETCDF = @NC_HAS_PNETCDF@
NC_HAS_SZIP = @NC_HAS_SZIP@
NC_LIBS = @NC_LIBS@
NC_M4 = @NC_M4@
NC_RELAX_COORD_BOUND = @NC_RELAX_COORD_BOUND@
NC_VERSION = @NC_VERSION@
NC_VERSION_MAJOR = @NC_VERSION_MAJOR@
NC_VERSION_MINOR = @NC_VERSION_MINOR@
NC_VERSION_NOTE = @NC_VERSION_NOTE@
NC_VERSION_PATCH = @NC_VERSION_PATCH@
NM = @NM@
NMEDIT = @NMEDIT@
NOUNDEFINED = @NOUNDEFINED@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RELAX_COORD_BOUND = @RELAX_COORD_BOUND@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHOW_DOXYGEN_TAG_LIST = @SHOW_DOXYGEN_TAG_LIST@
STRIP = @STRIP@
VALGRIND = @VALGRIND@
VALGRIND_ENABLED = @VALGRIND_ENABLED@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_shared = @enable_shared@
enable_static = @enable_static@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
valgrind_enabled_tools = @valgrind_enabled_tools@
valgrind_tools = @valgrind_tools@
AM_TESTS_ENVIRONMENT = export TOPSRCDIR=${abs_top_srcdir}; export TOPBUILDDIR=${abs_top_builddir}; 

# Put together AM_CPPFLAGS and AM_LDFLAGS.

# Un comment to use a more verbose test driver
#SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose
#LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose
TEST_EXTENSIONS = .sh

# Note which tests depend on other tests. necessary for make -j check
extradir = 
LDADD = ${top_builddir}/liblib/libnetcdf.la

# These are netCDF-4 C test programs which are built and run.
NC4_TESTS = tst_dims tst_dims2 tst_dims3 tst_files tst_files4 tst_vars \
	tst_varms tst_unlim_vars tst_converts tst_converts2 tst_grps \
	tst_grps2 tst_compounds tst_compounds2 tst_compounds3 \
	tst_opaques tst_strings tst_strings2 tst_interops \
	tst_interops4 tst_interops5 tst_interops6 tst_enums tst_coords \
	tst_coords2 tst_coords3 tst_vars3 tst_vars4 tst_chunks \
	tst_chunks2 tst_utf8 tst_fills tst_fills2 tst_fillbug \
	tst_xplatform tst_xplatform2 tst_endian_fill tst_atts t_type \
	cdm_sea_soundings tst_camrun tst_vl tst_atts1 tst_atts2 \
	tst_vars2 tst_files5 tst_files6 tst_sync tst_h_scalar \
	tst_rename tst_rename2 tst_h5_endians tst_atts_string_rewrite \
	tst_hdf5_file_compat tst_fill_attr_vanish tst_rehash \
	tst_filterparser tst_bug324 tst_types tst_atts3 tst_put_vars \
	tst_elatefill tst_udf $(am__append_2)
@BUILD_BENCHMARKS_TRUE@bm_netcdf4_recs_SOURCES = bm_netcdf4_recs.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@bm_many_atts_SOURCES = bm_many_atts.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@bm_many_objs_SOURCES = bm_many_objs.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@tst_ar4_3d_SOURCES = tst_ar4_3d.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@tst_ar4_4d_SOURCES = tst_ar4_4d.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@tst_files2_SOURCES = tst_files2.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@tst_ar4_SOURCES = tst_ar4.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@tst_h_many_atts_SOURCES = tst_h_many_atts.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@bm_file_SOURCES = bm_file.c tst_utils.c
@BUILD_BENCHMARKS_TRUE@tst_knmi_SOURCES = tst_knmi.c tst_utils.c
EXTRA_DIST = run_par_test.sh.in run_par_bm_test.sh.in run_bm_test1.sh	\
run_bm_test2.sh run_bm_elena.sh run_tst_chunks.sh			\
ref_tst_compounds.nc ref_tst_xplatform2_1.nc ref_tst_xplatform2_2.nc	\
ref_tst_dims.nc ref_tst_interops4.nc run_knmi_bm.sh CMakeLists.txt	\
run_grp_rename.sh tst_h5_endians.c tst_atts_string_rewrite.c		\
tst_put_vars_two_unlim_dim.c tst_empty_vlen_unlim.c			\
run_empty_vlen_test.sh ref_hdf5_compat1.nc ref_hdf5_compat2.nc		\
ref_hdf5_compat3.nc tst_misc.sh tdset.h5 tst_szip.sh ref_szip.h5	\
ref_szip.cdl tst_filter.sh bzip2.cdl filtered.cdl unfiltered.cdl	\
ref_bzip2.c findplugin.in perftest.sh

CLEANFILES = tst_mpi_parallel.bin cdm_sea_soundings.nc bm_chunking.nc	\
tst_floats_1D.cdl floats_1D_3.nc floats_1D.cdl tst_*.nc			\
tst_floats2_*.cdl tst_ints2_*.cdl tst_shorts2_*.cdl tst_elena_*.cdl	\
tst_simple*.cdl tst_chunks.cdl pr_A1.* tauu_A1.* usi_01.* thetau_01.*	\
tst_*.h5 tst_grp_rename.cdl tst_grp_rename.dmp ref_grp_rename.cdl	\
foo1.nc tst_*.h4 test.nc testszip.nc test.h5 szip_dump.cdl		\
perftest.txt bigmeta.nc bigvars.nc run_par_test.sh *.gz MSGCPP_*.nc	\
floats*.nc floats*.cdl shorts*.nc shorts*.cdl ints*.nc ints*.cdl

DISTCLEANFILES = findplugin.sh
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/lib_flags.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps nc_test4/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps nc_test4/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/lib_flags.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
findplugin.sh: $(top_builddir)/config.status $(srcdir)/findplugin.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
run_par_test.sh: $(top_builddir)/config.status $(srcdir)/run_par_test.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
run_par_bm_test.sh: $(top_builddir)/config.status $(srcdir)/run_par_bm_test.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-extraPROGRAMS: $(extra_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(extra_PROGRAMS)'; test -n "$(extradir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(extradir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(extradir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(extradir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(extradir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-extraPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(extra_PROGRAMS)'; test -n "$(extradir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(extradir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(extradir)" && rm -f $$files

clean-extraPROGRAMS:
	@list='$(extra_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

bigmeta$(EXEEXT): $(bigmeta_OBJECTS) $(bigmeta_DEPENDENCIES) $(EXTRA_bigmeta_DEPENDENCIES) 
	@rm -f bigmeta$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bigmeta_OBJECTS) $(bigmeta_LDADD) $(LIBS)

bm_file$(EXEEXT): $(bm_file_OBJECTS) $(bm_file_DEPENDENCIES) $(EXTRA_bm_file_DEPENDENCIES) 
	@rm -f bm_file$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bm_file_OBJECTS) $(bm_file_LDADD) $(LIBS)

bm_many_atts$(EXEEXT): $(bm_many_atts_OBJECTS) $(bm_many_atts_DEPENDENCIES) $(EXTRA_bm_many_atts_DEPENDENCIES) 
	@rm -f bm_many_atts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bm_many_atts_OBJECTS) $(bm_many_atts_LDADD) $(LIBS)

bm_many_objs$(EXEEXT): $(bm_many_objs_OBJECTS) $(bm_many_objs_DEPENDENCIES) $(EXTRA_bm_many_objs_DEPENDENCIES) 
	@rm -f bm_many_objs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bm_many_objs_OBJECTS) $(bm_many_objs_LDADD) $(LIBS)

bm_netcdf4_recs$(EXEEXT): $(bm_netcdf4_recs_OBJECTS) $(bm_netcdf4_recs_DEPENDENCIES) $(EXTRA_bm_netcdf4_recs_DEPENDENCIES) 
	@rm -f bm_netcdf4_recs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bm_netcdf4_recs_OBJECTS) $(bm_netcdf4_recs_LDADD) $(LIBS)

cdm_sea_soundings$(EXEEXT): $(cdm_sea_soundings_OBJECTS) $(cdm_sea_soundings_DEPENDENCIES) $(EXTRA_cdm_sea_soundings_DEPENDENCIES) 
	@rm -f cdm_sea_soundings$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cdm_sea_soundings_OBJECTS) $(cdm_sea_soundings_LDADD) $(LIBS)

h5testszip$(EXEEXT): $(h5testszip_OBJECTS) $(h5testszip_DEPENDENCIES) $(EXTRA_h5testszip_DEPENDENCIES) 
	@rm -f h5testszip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(h5testszip_OBJECTS) $(h5testszip_LDADD) $(LIBS)

openbigmeta$(EXEEXT): $(openbigmeta_OBJECTS) $(openbigmeta_DEPENDENCIES) $(EXTRA_openbigmeta_DEPENDENCIES) 
	@rm -f openbigmeta$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openbigmeta_OBJECTS) $(openbigmeta_LDADD) $(LIBS)

renamegroup$(EXEEXT): $(renamegroup_OBJECTS) $(renamegroup_DEPENDENCIES) $(EXTRA_renamegroup_DEPENDENCIES) 
	@rm -f renamegroup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(renamegroup_OBJECTS) $(renamegroup_LDADD) $(LIBS)

t_type$(EXEEXT): $(t_type_OBJECTS) $(t_type_DEPENDENCIES) $(EXTRA_t_type_DEPENDENCIES) 
	@rm -f t_type$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_type_OBJECTS) $(t_type_LDADD) $(LIBS)

test_filter$(EXEEXT): $(test_filter_OBJECTS) $(test_filter_DEPENDENCIES) $(EXTRA_test_filter_DEPENDENCIES) 
	@rm -f test_filter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_filter_OBJECTS) $(test_filter_LDADD) $(LIBS)

test_filter_misc$(EXEEXT): $(test_filter_misc_OBJECTS) $(test_filter_misc_DEPENDENCIES) $(EXTRA_test_filter_misc_DEPENDENCIES) 
	@rm -f test_filter_misc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_filter_misc_OBJECTS) $(test_filter_misc_LDADD) $(LIBS)

test_szip$(EXEEXT): $(test_szip_OBJECTS) $(test_szip_DEPENDENCIES) $(EXTRA_test_szip_DEPENDENCIES) 
	@rm -f test_szip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_szip_OBJECTS) $(test_szip_LDADD) $(LIBS)

tst_ar4$(EXEEXT): $(tst_ar4_OBJECTS) $(tst_ar4_DEPENDENCIES) $(EXTRA_tst_ar4_DEPENDENCIES) 
	@rm -f tst_ar4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_ar4_OBJECTS) $(tst_ar4_LDADD) $(LIBS)

tst_ar4_3d$(EXEEXT): $(tst_ar4_3d_OBJECTS) $(tst_ar4_3d_DEPENDENCIES) $(EXTRA_tst_ar4_3d_DEPENDENCIES) 
	@rm -f tst_ar4_3d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_ar4_3d_OBJECTS) $(tst_ar4_3d_LDADD) $(LIBS)

tst_ar4_4d$(EXEEXT): $(tst_ar4_4d_OBJECTS) $(tst_ar4_4d_DEPENDENCIES) $(EXTRA_tst_ar4_4d_DEPENDENCIES) 
	@rm -f tst_ar4_4d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_ar4_4d_OBJECTS) $(tst_ar4_4d_LDADD) $(LIBS)

tst_atts$(EXEEXT): $(tst_atts_OBJECTS) $(tst_atts_DEPENDENCIES) $(EXTRA_tst_atts_DEPENDENCIES) 
	@rm -f tst_atts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_atts_OBJECTS) $(tst_atts_LDADD) $(LIBS)

tst_atts1$(EXEEXT): $(tst_atts1_OBJECTS) $(tst_atts1_DEPENDENCIES) $(EXTRA_tst_atts1_DEPENDENCIES) 
	@rm -f tst_atts1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_atts1_OBJECTS) $(tst_atts1_LDADD) $(LIBS)

tst_atts2$(EXEEXT): $(tst_atts2_OBJECTS) $(tst_atts2_DEPENDENCIES) $(EXTRA_tst_atts2_DEPENDENCIES) 
	@rm -f tst_atts2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_atts2_OBJECTS) $(tst_atts2_LDADD) $(LIBS)

tst_atts3$(EXEEXT): $(tst_atts3_OBJECTS) $(tst_atts3_DEPENDENCIES) $(EXTRA_tst_atts3_DEPENDENCIES) 
	@rm -f tst_atts3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_atts3_OBJECTS) $(tst_atts3_LDADD) $(LIBS)

tst_atts_string_rewrite$(EXEEXT): $(tst_atts_string_rewrite_OBJECTS) $(tst_atts_string_rewrite_DEPENDENCIES) $(EXTRA_tst_atts_string_rewrite_DEPENDENCIES) 
	@rm -f tst_atts_string_rewrite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_atts_string_rewrite_OBJECTS) $(tst_atts_string_rewrite_LDADD) $(LIBS)

tst_attsperf$(EXEEXT): $(tst_attsperf_OBJECTS) $(tst_attsperf_DEPENDENCIES) $(EXTRA_tst_attsperf_DEPENDENCIES) 
	@rm -f tst_attsperf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_attsperf_OBJECTS) $(tst_attsperf_LDADD) $(LIBS)

tst_bug324$(EXEEXT): $(tst_bug324_OBJECTS) $(tst_bug324_DEPENDENCIES) $(EXTRA_tst_bug324_DEPENDENCIES) 
	@rm -f tst_bug324$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_bug324_OBJECTS) $(tst_bug324_LDADD) $(LIBS)

tst_camrun$(EXEEXT): $(tst_camrun_OBJECTS) $(tst_camrun_DEPENDENCIES) $(EXTRA_tst_camrun_DEPENDENCIES) 
	@rm -f tst_camrun$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_camrun_OBJECTS) $(tst_camrun_LDADD) $(LIBS)

tst_chunks$(EXEEXT): $(tst_chunks_OBJECTS) $(tst_chunks_DEPENDENCIES) $(EXTRA_tst_chunks_DEPENDENCIES) 
	@rm -f tst_chunks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_chunks_OBJECTS) $(tst_chunks_LDADD) $(LIBS)

tst_chunks2$(EXEEXT): $(tst_chunks2_OBJECTS) $(tst_chunks2_DEPENDENCIES) $(EXTRA_tst_chunks2_DEPENDENCIES) 
	@rm -f tst_chunks2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_chunks2_OBJECTS) $(tst_chunks2_LDADD) $(LIBS)

tst_chunks3$(EXEEXT): $(tst_chunks3_OBJECTS) $(tst_chunks3_DEPENDENCIES) $(EXTRA_tst_chunks3_DEPENDENCIES) 
	@rm -f tst_chunks3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_chunks3_OBJECTS) $(tst_chunks3_LDADD) $(LIBS)

tst_compounds$(EXEEXT): $(tst_compounds_OBJECTS) $(tst_compounds_DEPENDENCIES) $(EXTRA_tst_compounds_DEPENDENCIES) 
	@rm -f tst_compounds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_compounds_OBJECTS) $(tst_compounds_LDADD) $(LIBS)

tst_compounds2$(EXEEXT): $(tst_compounds2_OBJECTS) $(tst_compounds2_DEPENDENCIES) $(EXTRA_tst_compounds2_DEPENDENCIES) 
	@rm -f tst_compounds2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_compounds2_OBJECTS) $(tst_compounds2_LDADD) $(LIBS)

tst_compounds3$(EXEEXT): $(tst_compounds3_OBJECTS) $(tst_compounds3_DEPENDENCIES) $(EXTRA_tst_compounds3_DEPENDENCIES) 
	@rm -f tst_compounds3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_compounds3_OBJECTS) $(tst_compounds3_LDADD) $(LIBS)

tst_converts$(EXEEXT): $(tst_converts_OBJECTS) $(tst_converts_DEPENDENCIES) $(EXTRA_tst_converts_DEPENDENCIES) 
	@rm -f tst_converts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_converts_OBJECTS) $(tst_converts_LDADD) $(LIBS)

tst_converts2$(EXEEXT): $(tst_converts2_OBJECTS) $(tst_converts2_DEPENDENCIES) $(EXTRA_tst_converts2_DEPENDENCIES) 
	@rm -f tst_converts2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_converts2_OBJECTS) $(tst_converts2_LDADD) $(LIBS)

tst_coords$(EXEEXT): $(tst_coords_OBJECTS) $(tst_coords_DEPENDENCIES) $(EXTRA_tst_coords_DEPENDENCIES) 
	@rm -f tst_coords$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_coords_OBJECTS) $(tst_coords_LDADD) $(LIBS)

tst_coords2$(EXEEXT): $(tst_coords2_OBJECTS) $(tst_coords2_DEPENDENCIES) $(EXTRA_tst_coords2_DEPENDENCIES) 
	@rm -f tst_coords2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_coords2_OBJECTS) $(tst_coords2_LDADD) $(LIBS)

tst_coords3$(EXEEXT): $(tst_coords3_OBJECTS) $(tst_coords3_DEPENDENCIES) $(EXTRA_tst_coords3_DEPENDENCIES) 
	@rm -f tst_coords3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_coords3_OBJECTS) $(tst_coords3_LDADD) $(LIBS)

tst_create_files$(EXEEXT): $(tst_create_files_OBJECTS) $(tst_create_files_DEPENDENCIES) $(EXTRA_tst_create_files_DEPENDENCIES) 
	@rm -f tst_create_files$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_create_files_OBJECTS) $(tst_create_files_LDADD) $(LIBS)

tst_dims$(EXEEXT): $(tst_dims_OBJECTS) $(tst_dims_DEPENDENCIES) $(EXTRA_tst_dims_DEPENDENCIES) 
	@rm -f tst_dims$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_dims_OBJECTS) $(tst_dims_LDADD) $(LIBS)

tst_dims2$(EXEEXT): $(tst_dims2_OBJECTS) $(tst_dims2_DEPENDENCIES) $(EXTRA_tst_dims2_DEPENDENCIES) 
	@rm -f tst_dims2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_dims2_OBJECTS) $(tst_dims2_LDADD) $(LIBS)

tst_dims3$(EXEEXT): $(tst_dims3_OBJECTS) $(tst_dims3_DEPENDENCIES) $(EXTRA_tst_dims3_DEPENDENCIES) 
	@rm -f tst_dims3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_dims3_OBJECTS) $(tst_dims3_LDADD) $(LIBS)

tst_elatefill$(EXEEXT): $(tst_elatefill_OBJECTS) $(tst_elatefill_DEPENDENCIES) $(EXTRA_tst_elatefill_DEPENDENCIES) 
	@rm -f tst_elatefill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_elatefill_OBJECTS) $(tst_elatefill_LDADD) $(LIBS)

tst_empty_vlen_unlim$(EXEEXT): $(tst_empty_vlen_unlim_OBJECTS) $(tst_empty_vlen_unlim_DEPENDENCIES) $(EXTRA_tst_empty_vlen_unlim_DEPENDENCIES) 
	@rm -f tst_empty_vlen_unlim$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_empty_vlen_unlim_OBJECTS) $(tst_empty_vlen_unlim_LDADD) $(LIBS)

tst_endian_fill$(EXEEXT): $(tst_endian_fill_OBJECTS) $(tst_endian_fill_DEPENDENCIES) $(EXTRA_tst_endian_fill_DEPENDENCIES) 
	@rm -f tst_endian_fill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_endian_fill_OBJECTS) $(tst_endian_fill_LDADD) $(LIBS)

tst_enums$(EXEEXT): $(tst_enums_OBJECTS) $(tst_enums_DEPENDENCIES) $(EXTRA_tst_enums_DEPENDENCIES) 
	@rm -f tst_enums$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_enums_OBJECTS) $(tst_enums_LDADD) $(LIBS)

tst_files$(EXEEXT): $(tst_files_OBJECTS) $(tst_files_DEPENDENCIES) $(EXTRA_tst_files_DEPENDENCIES) 
	@rm -f tst_files$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_files_OBJECTS) $(tst_files_LDADD) $(LIBS)

tst_files2$(EXEEXT): $(tst_files2_OBJECTS) $(tst_files2_DEPENDENCIES) $(EXTRA_tst_files2_DEPENDENCIES) 
	@rm -f tst_files2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_files2_OBJECTS) $(tst_files2_LDADD) $(LIBS)

tst_files3$(EXEEXT): $(tst_files3_OBJECTS) $(tst_files3_DEPENDENCIES) $(EXTRA_tst_files3_DEPENDENCIES) 
	@rm -f tst_files3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_files3_OBJECTS) $(tst_files3_LDADD) $(LIBS)

tst_files4$(EXEEXT): $(tst_files4_OBJECTS) $(tst_files4_DEPENDENCIES) $(EXTRA_tst_files4_DEPENDENCIES) 
	@rm -f tst_files4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_files4_OBJECTS) $(tst_files4_LDADD) $(LIBS)

tst_files5$(EXEEXT): $(tst_files5_OBJECTS) $(tst_files5_DEPENDENCIES) $(EXTRA_tst_files5_DEPENDENCIES) 
	@rm -f tst_files5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_files5_OBJECTS) $(tst_files5_LDADD) $(LIBS)

tst_files6$(EXEEXT): $(tst_files6_OBJECTS) $(tst_files6_DEPENDENCIES) $(EXTRA_tst_files6_DEPENDENCIES) 
	@rm -f tst_files6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_files6_OBJECTS) $(tst_files6_LDADD) $(LIBS)

tst_fill_attr_vanish$(EXEEXT): $(tst_fill_attr_vanish_OBJECTS) $(tst_fill_attr_vanish_DEPENDENCIES) $(EXTRA_tst_fill_attr_vanish_DEPENDENCIES) 
	@rm -f tst_fill_attr_vanish$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_fill_attr_vanish_OBJECTS) $(tst_fill_attr_vanish_LDADD) $(LIBS)

tst_fillbug$(EXEEXT): $(tst_fillbug_OBJECTS) $(tst_fillbug_DEPENDENCIES) $(EXTRA_tst_fillbug_DEPENDENCIES) 
	@rm -f tst_fillbug$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_fillbug_OBJECTS) $(tst_fillbug_LDADD) $(LIBS)

tst_fills$(EXEEXT): $(tst_fills_OBJECTS) $(tst_fills_DEPENDENCIES) $(EXTRA_tst_fills_DEPENDENCIES) 
	@rm -f tst_fills$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_fills_OBJECTS) $(tst_fills_LDADD) $(LIBS)

tst_fills2$(EXEEXT): $(tst_fills2_OBJECTS) $(tst_fills2_DEPENDENCIES) $(EXTRA_tst_fills2_DEPENDENCIES) 
	@rm -f tst_fills2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_fills2_OBJECTS) $(tst_fills2_LDADD) $(LIBS)

tst_filterparser$(EXEEXT): $(tst_filterparser_OBJECTS) $(tst_filterparser_DEPENDENCIES) $(EXTRA_tst_filterparser_DEPENDENCIES) 
	@rm -f tst_filterparser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_filterparser_OBJECTS) $(tst_filterparser_LDADD) $(LIBS)

tst_grps$(EXEEXT): $(tst_grps_OBJECTS) $(tst_grps_DEPENDENCIES) $(EXTRA_tst_grps_DEPENDENCIES) 
	@rm -f tst_grps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_grps_OBJECTS) $(tst_grps_LDADD) $(LIBS)

tst_grps2$(EXEEXT): $(tst_grps2_OBJECTS) $(tst_grps2_DEPENDENCIES) $(EXTRA_tst_grps2_DEPENDENCIES) 
	@rm -f tst_grps2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_grps2_OBJECTS) $(tst_grps2_LDADD) $(LIBS)

tst_h5_endians$(EXEEXT): $(tst_h5_endians_OBJECTS) $(tst_h5_endians_DEPENDENCIES) $(EXTRA_tst_h5_endians_DEPENDENCIES) 
	@rm -f tst_h5_endians$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_h5_endians_OBJECTS) $(tst_h5_endians_LDADD) $(LIBS)

tst_h_many_atts$(EXEEXT): $(tst_h_many_atts_OBJECTS) $(tst_h_many_atts_DEPENDENCIES) $(EXTRA_tst_h_many_atts_DEPENDENCIES) 
	@rm -f tst_h_many_atts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_h_many_atts_OBJECTS) $(tst_h_many_atts_LDADD) $(LIBS)

tst_h_refs$(EXEEXT): $(tst_h_refs_OBJECTS) $(tst_h_refs_DEPENDENCIES) $(EXTRA_tst_h_refs_DEPENDENCIES) 
	@rm -f tst_h_refs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_h_refs_OBJECTS) $(tst_h_refs_LDADD) $(LIBS)

tst_h_scalar$(EXEEXT): $(tst_h_scalar_OBJECTS) $(tst_h_scalar_DEPENDENCIES) $(EXTRA_tst_h_scalar_DEPENDENCIES) 
	@rm -f tst_h_scalar$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_h_scalar_OBJECTS) $(tst_h_scalar_LDADD) $(LIBS)

tst_h_strbug$(EXEEXT): $(tst_h_strbug_OBJECTS) $(tst_h_strbug_DEPENDENCIES) $(EXTRA_tst_h_strbug_DEPENDENCIES) 
	@rm -f tst_h_strbug$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_h_strbug_OBJECTS) $(tst_h_strbug_LDADD) $(LIBS)

tst_hdf5_file_compat$(EXEEXT): $(tst_hdf5_file_compat_OBJECTS) $(tst_hdf5_file_compat_DEPENDENCIES) $(EXTRA_tst_hdf5_file_compat_DEPENDENCIES) 
	@rm -f tst_hdf5_file_compat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_hdf5_file_compat_OBJECTS) $(tst_hdf5_file_compat_LDADD) $(LIBS)

tst_interops$(EXEEXT): $(tst_interops_OBJECTS) $(tst_interops_DEPENDENCIES) $(EXTRA_tst_interops_DEPENDENCIES) 
	@rm -f tst_interops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_interops_OBJECTS) $(tst_interops_LDADD) $(LIBS)

tst_interops4$(EXEEXT): $(tst_interops4_OBJECTS) $(tst_interops4_DEPENDENCIES) $(EXTRA_tst_interops4_DEPENDENCIES) 
	@rm -f tst_interops4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_interops4_OBJECTS) $(tst_interops4_LDADD) $(LIBS)

tst_interops5$(EXEEXT): $(tst_interops5_OBJECTS) $(tst_interops5_DEPENDENCIES) $(EXTRA_tst_interops5_DEPENDENCIES) 
	@rm -f tst_interops5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_interops5_OBJECTS) $(tst_interops5_LDADD) $(LIBS)

tst_interops6$(EXEEXT): $(tst_interops6_OBJECTS) $(tst_interops6_DEPENDENCIES) $(EXTRA_tst_interops6_DEPENDENCIES) 
	@rm -f tst_interops6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_interops6_OBJECTS) $(tst_interops6_LDADD) $(LIBS)

tst_knmi$(EXEEXT): $(tst_knmi_OBJECTS) $(tst_knmi_DEPENDENCIES) $(EXTRA_tst_knmi_DEPENDENCIES) 
	@rm -f tst_knmi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_knmi_OBJECTS) $(tst_knmi_LDADD) $(LIBS)

tst_large$(EXEEXT): $(tst_large_OBJECTS) $(tst_large_DEPENDENCIES) $(EXTRA_tst_large_DEPENDENCIES) 
	@rm -f tst_large$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_large_OBJECTS) $(tst_large_LDADD) $(LIBS)

tst_large2$(EXEEXT): $(tst_large2_OBJECTS) $(tst_large2_DEPENDENCIES) $(EXTRA_tst_large2_DEPENDENCIES) 
	@rm -f tst_large2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_large2_OBJECTS) $(tst_large2_LDADD) $(LIBS)

tst_mem$(EXEEXT): $(tst_mem_OBJECTS) $(tst_mem_DEPENDENCIES) $(EXTRA_tst_mem_DEPENDENCIES) 
	@rm -f tst_mem$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_mem_OBJECTS) $(tst_mem_LDADD) $(LIBS)

tst_mode$(EXEEXT): $(tst_mode_OBJECTS) $(tst_mode_DEPENDENCIES) $(EXTRA_tst_mode_DEPENDENCIES) 
	@rm -f tst_mode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_mode_OBJECTS) $(tst_mode_LDADD) $(LIBS)

tst_mpi_parallel$(EXEEXT): $(tst_mpi_parallel_OBJECTS) $(tst_mpi_parallel_DEPENDENCIES) $(EXTRA_tst_mpi_parallel_DEPENDENCIES) 
	@rm -f tst_mpi_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_mpi_parallel_OBJECTS) $(tst_mpi_parallel_LDADD) $(LIBS)

tst_nc4perf$(EXEEXT): $(tst_nc4perf_OBJECTS) $(tst_nc4perf_DEPENDENCIES) $(EXTRA_tst_nc4perf_DEPENDENCIES) 
	@rm -f tst_nc4perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_nc4perf_OBJECTS) $(tst_nc4perf_LDADD) $(LIBS)

tst_opaques$(EXEEXT): $(tst_opaques_OBJECTS) $(tst_opaques_DEPENDENCIES) $(EXTRA_tst_opaques_DEPENDENCIES) 
	@rm -f tst_opaques$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_opaques_OBJECTS) $(tst_opaques_LDADD) $(LIBS)

tst_parallel$(EXEEXT): $(tst_parallel_OBJECTS) $(tst_parallel_DEPENDENCIES) $(EXTRA_tst_parallel_DEPENDENCIES) 
	@rm -f tst_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_parallel_OBJECTS) $(tst_parallel_LDADD) $(LIBS)

tst_parallel3$(EXEEXT): $(tst_parallel3_OBJECTS) $(tst_parallel3_DEPENDENCIES) $(EXTRA_tst_parallel3_DEPENDENCIES) 
	@rm -f tst_parallel3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_parallel3_OBJECTS) $(tst_parallel3_LDADD) $(LIBS)

tst_parallel4$(EXEEXT): $(tst_parallel4_OBJECTS) $(tst_parallel4_DEPENDENCIES) $(EXTRA_tst_parallel4_DEPENDENCIES) 
	@rm -f tst_parallel4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_parallel4_OBJECTS) $(tst_parallel4_LDADD) $(LIBS)

tst_parallel5$(EXEEXT): $(tst_parallel5_OBJECTS) $(tst_parallel5_DEPENDENCIES) $(EXTRA_tst_parallel5_DEPENDENCIES) 
	@rm -f tst_parallel5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_parallel5_OBJECTS) $(tst_parallel5_LDADD) $(LIBS)

tst_put_vars$(EXEEXT): $(tst_put_vars_OBJECTS) $(tst_put_vars_DEPENDENCIES) $(EXTRA_tst_put_vars_DEPENDENCIES) 
	@rm -f tst_put_vars$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_put_vars_OBJECTS) $(tst_put_vars_LDADD) $(LIBS)

tst_rehash$(EXEEXT): $(tst_rehash_OBJECTS) $(tst_rehash_DEPENDENCIES) $(EXTRA_tst_rehash_DEPENDENCIES) 
	@rm -f tst_rehash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_rehash_OBJECTS) $(tst_rehash_LDADD) $(LIBS)

tst_rename$(EXEEXT): $(tst_rename_OBJECTS) $(tst_rename_DEPENDENCIES) $(EXTRA_tst_rename_DEPENDENCIES) 
	@rm -f tst_rename$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_rename_OBJECTS) $(tst_rename_LDADD) $(LIBS)

tst_rename2$(EXEEXT): $(tst_rename2_OBJECTS) $(tst_rename2_DEPENDENCIES) $(EXTRA_tst_rename2_DEPENDENCIES) 
	@rm -f tst_rename2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_rename2_OBJECTS) $(tst_rename2_LDADD) $(LIBS)

tst_simplerw_coll_r$(EXEEXT): $(tst_simplerw_coll_r_OBJECTS) $(tst_simplerw_coll_r_DEPENDENCIES) $(EXTRA_tst_simplerw_coll_r_DEPENDENCIES) 
	@rm -f tst_simplerw_coll_r$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_simplerw_coll_r_OBJECTS) $(tst_simplerw_coll_r_LDADD) $(LIBS)

tst_strings$(EXEEXT): $(tst_strings_OBJECTS) $(tst_strings_DEPENDENCIES) $(EXTRA_tst_strings_DEPENDENCIES) 
	@rm -f tst_strings$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_strings_OBJECTS) $(tst_strings_LDADD) $(LIBS)

tst_strings2$(EXEEXT): $(tst_strings2_OBJECTS) $(tst_strings2_DEPENDENCIES) $(EXTRA_tst_strings2_DEPENDENCIES) 
	@rm -f tst_strings2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_strings2_OBJECTS) $(tst_strings2_LDADD) $(LIBS)

tst_sync$(EXEEXT): $(tst_sync_OBJECTS) $(tst_sync_DEPENDENCIES) $(EXTRA_tst_sync_DEPENDENCIES) 
	@rm -f tst_sync$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_sync_OBJECTS) $(tst_sync_LDADD) $(LIBS)

tst_types$(EXEEXT): $(tst_types_OBJECTS) $(tst_types_DEPENDENCIES) $(EXTRA_tst_types_DEPENDENCIES) 
	@rm -f tst_types$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_types_OBJECTS) $(tst_types_LDADD) $(LIBS)

tst_udf$(EXEEXT): $(tst_udf_OBJECTS) $(tst_udf_DEPENDENCIES) $(EXTRA_tst_udf_DEPENDENCIES) 
	@rm -f tst_udf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_udf_OBJECTS) $(tst_udf_LDADD) $(LIBS)

tst_unlim_vars$(EXEEXT): $(tst_unlim_vars_OBJECTS) $(tst_unlim_vars_DEPENDENCIES) $(EXTRA_tst_unlim_vars_DEPENDENCIES) 
	@rm -f tst_unlim_vars$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_unlim_vars_OBJECTS) $(tst_unlim_vars_LDADD) $(LIBS)

tst_utf8$(EXEEXT): $(tst_utf8_OBJECTS) $(tst_utf8_DEPENDENCIES) $(EXTRA_tst_utf8_DEPENDENCIES) 
	@rm -f tst_utf8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_utf8_OBJECTS) $(tst_utf8_LDADD) $(LIBS)

tst_v2$(EXEEXT): $(tst_v2_OBJECTS) $(tst_v2_DEPENDENCIES) $(EXTRA_tst_v2_DEPENDENCIES) 
	@rm -f tst_v2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_v2_OBJECTS) $(tst_v2_LDADD) $(LIBS)

tst_varms$(EXEEXT): $(tst_varms_OBJECTS) $(tst_varms_DEPENDENCIES) $(EXTRA_tst_varms_DEPENDENCIES) 
	@rm -f tst_varms$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_varms_OBJECTS) $(tst_varms_LDADD) $(LIBS)

tst_vars$(EXEEXT): $(tst_vars_OBJECTS) $(tst_vars_DEPENDENCIES) $(EXTRA_tst_vars_DEPENDENCIES) 
	@rm -f tst_vars$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_vars_OBJECTS) $(tst_vars_LDADD) $(LIBS)

tst_vars2$(EXEEXT): $(tst_vars2_OBJECTS) $(tst_vars2_DEPENDENCIES) $(EXTRA_tst_vars2_DEPENDENCIES) 
	@rm -f tst_vars2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_vars2_OBJECTS) $(tst_vars2_LDADD) $(LIBS)

tst_vars3$(EXEEXT): $(tst_vars3_OBJECTS) $(tst_vars3_DEPENDENCIES) $(EXTRA_tst_vars3_DEPENDENCIES) 
	@rm -f tst_vars3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_vars3_OBJECTS) $(tst_vars3_LDADD) $(LIBS)

tst_vars4$(EXEEXT): $(tst_vars4_OBJECTS) $(tst_vars4_DEPENDENCIES) $(EXTRA_tst_vars4_DEPENDENCIES) 
	@rm -f tst_vars4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_vars4_OBJECTS) $(tst_vars4_LDADD) $(LIBS)

tst_vl$(EXEEXT): $(tst_vl_OBJECTS) $(tst_vl_DEPENDENCIES) $(EXTRA_tst_vl_DEPENDENCIES) 
	@rm -f tst_vl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_vl_OBJECTS) $(tst_vl_LDADD) $(LIBS)

tst_xplatform$(EXEEXT): $(tst_xplatform_OBJECTS) $(tst_xplatform_DEPENDENCIES) $(EXTRA_tst_xplatform_DEPENDENCIES) 
	@rm -f tst_xplatform$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_xplatform_OBJECTS) $(tst_xplatform_LDADD) $(LIBS)

tst_xplatform2$(EXEEXT): $(tst_xplatform2_OBJECTS) $(tst_xplatform2_DEPENDENCIES) $(EXTRA_tst_xplatform2_DEPENDENCIES) 
	@rm -f tst_xplatform2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_xplatform2_OBJECTS) $(tst_xplatform2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
check-valgrind-local: 
check-valgrind-memcheck-local: 
check-valgrind-helgrind-local: 
check-valgrind-drd-local: 
check-valgrind-sgcheck-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(extradir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
check-valgrind: check-valgrind-am

check-valgrind-am: check-valgrind-local

check-valgrind-drd: check-valgrind-drd-am

check-valgrind-drd-am: check-valgrind-drd-local

check-valgrind-helgrind: check-valgrind-helgrind-am

check-valgrind-helgrind-am: check-valgrind-helgrind-local

check-valgrind-memcheck: check-valgrind-memcheck-am

check-valgrind-memcheck-am: check-valgrind-memcheck-local

check-valgrind-sgcheck: check-valgrind-sgcheck-am

check-valgrind-sgcheck-am: check-valgrind-sgcheck-local

clean: clean-am

clean-am: clean-checkPROGRAMS clean-extraPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-extraPROGRAMS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-extraPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am \
	check-valgrind-am check-valgrind-drd-am \
	check-valgrind-drd-local check-valgrind-helgrind-am \
	check-valgrind-helgrind-local check-valgrind-local \
	check-valgrind-memcheck-am check-valgrind-memcheck-local \
	check-valgrind-sgcheck-am check-valgrind-sgcheck-local clean \
	clean-checkPROGRAMS clean-extraPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am \
	install-extraPROGRAMS install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-extraPROGRAMS

.PRECIOUS: Makefile


# tst_create_files creates files for other tests.
@BUILD_BENCHMARKS_TRUE@run_bm_test1.log: tst_create_files.log
@BUILD_BENCHMARKS_TRUE@run_bm_test2.log: tst_create_files.log
@BUILD_BENCHMARKS_TRUE@run_bm_elena.log: tst_create_files.log
# This benchmark depends on tst_create_files being run.
@BUILD_BENCHMARKS_TRUE@@TEST_PARALLEL4_TRUE@run_par_bm_test.log: tst_create_files.log

# If valgrind is present, add valgrind targets.
@VALGRIND_CHECK_RULES@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
